-- Create a database
CREATE OR REPLACE DATABASE salesforce_db;
USE DATABASE salesforce_db;
-- Create a schema
CREATE OR REPLACE SCHEMA salesforce_schema;
USE SCHEMA salesforce_schema;
-- Create a table to store data
CREATE OR REPLACE TABLE my_table (
    id INT AUTOINCREMENT PRIMARY KEY,
    name STRING,
    email STRING,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
-- Create a stream to track inserts
CREATE OR REPLACE STREAM my_table_stream ON TABLE my_table;
-- Insert sample data
INSERT INTO my_table (name, email) VALUES
('John Doe', 'john.doe@example.com'),
('Jane Smith', 'jane.smith@example.com');
-- Query the stream to see new data
SELECT * FROM my_table_stream;
-- Create a Network Rule for Salesforce
CREATE OR REPLACE NETWORK RULE allow_salesforce_rule
  MODE = EGRESS
  TYPE = HOST_PORT
  VALUE_LIST = ('login.salesforce.com');
-- Create an External Access Integration
CREATE OR REPLACE EXTERNAL ACCESS INTEGRATION salesforce_access_integration
  ALLOWED_NETWORK_RULES = (allow_salesforce_rule)
  ENABLED = TRUE;
-- Store Salesforce Credentials Securely
CREATE OR REPLACE SECRET salesforce_secret
  TYPE = GENERIC_STRING
  SECRET_STRING = '{"username":"abhinav.sharma@sf.developer", "password":"Happy@3317", "token":"Cv9QXb8IXRrxsV8w9F9nIMJ1H"}';
-- Create a Secure Snowflake Procedure for Data Transfer
CREATE OR REPLACE PROCEDURE transfer_to_salesforce()
RETURNS STRING
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('snowflake-snowpark-python', 'simple-salesforce')
EXTERNAL_ACCESS_INTEGRATIONS = (salesforce_access_integration)
HANDLER = 'run'
AS
$$
import json
from simple_salesforce import Salesforce
def run(session):
    # Retrieve credentials from Snowflake table
    secret_query = "SELECT username, password, token FROM salesforce_credentials"
    creds = session.sql(secret_query).collect()[0]
    SALESFORCE_USERNAME = creds[0]
    SALESFORCE_PASSWORD = creds[1]
    SALESFORCE_SECURITY_TOKEN = creds[2]
    # Fetch new records from Snowflake
    new_data = session.sql("""
        SELECT id, name, email
        FROM my_table_stream
        WHERE METADATA$ACTION = 'INSERT'
    """).collect()
    # Connect to Salesforce
    sf = Salesforce(
        username=SALESFORCE_USERNAME,
        password=SALESFORCE_PASSWORD,
        security_token=SALESFORCE_SECURITY_TOKEN
    )
    # Insert records into Salesforce
    for row in new_data:
        record_id, name, email = row
        sf.sfdx_tech__SnowflakeData__c.create({
            'Name': name,
            'sfdx_tech__Email__c': email,
            'sfdx_tech__External_Id__c': f'SNOWFLAKE_{record_id}'
        })
        print(f"Inserted record: {name}, {email}")
    # Commit transaction
    session.sql("COMMIT").collect()
    return "Data transfer completed"
$$;

SHOW EXTERNAL ACCESS INTEGRATIONS;

CREATE OR REPLACE NETWORK RULE allow_salesforce_rule
  MODE = EGRESS
  TYPE = HOST_PORT
  VALUE_LIST = ('login.salesforce.com', 'test.salesforce.com', 'abhinav-sf-developer-dev-ed.develop.my.salesforce.com');

  CREATE OR REPLACE EXTERNAL ACCESS INTEGRATION salesforce_access_integration
  ALLOWED_NETWORK_RULES = (allow_salesforce_rule)
  ENABLED = TRUE;









-- CREATE OR REPLACE TABLE salesforce_credentials (
--     username STRING,
--     password STRING,
--     token STRING
-- );
-- -- Insert credentials (Use role with necessary permissions)
-- INSERT INTO salesforce_credentials (username, password, token)
-- VALUES ('abhinav.sharma@sf.developer', 'Happy@3317', 'Cv9QXb8IXRrxsV8w9F9nIMJ1H');

-- Call the procedure
CALL transfer_to_salesforce();
